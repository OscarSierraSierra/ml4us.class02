%h1 Aggregated Backtests

#chart
#previewSlider
#rickshaw_legend

%link(type="text/css" rel="stylesheet" href="/rickshaw.min.css")
%script(src="/d3/d3.js")
%script(src="/rickshaw.min.js")
:javascript
  // I should use d3.js to convert CSV file to array called rows
  d3.csv('/csv/allrgb.csv')
    // I should use row() to format each row in rows.
    .row(function(arow) {
      mydate   = new Date(arow.cdate)
      myudate  = parseInt((new Date(arow.cdate).getTime() / 1000).toFixed(0))
      cp       = parseFloat(arow.cp)
      allgreen = parseFloat(arow.allgreen)
      allred   = parseFloat(arow.allred)
      return {'x':myudate,'y':cp,'allgreen':allgreen,'allred':allred}
    })
    .get(function(error, rows) {
      // I should access rows inside this function.
      redrows   = rows.map(function(arow) {return {'x':arow.x, 'y':arow.allred}})
      greenrows = rows.map(function(arow) {return {'x':arow.x, 'y':arow.allgreen}})
      bluerows  = rows.map(function(arow) {return {'x':arow.x, 'y':arow.y}})
      var graph = new Rickshaw.Graph( {
        // I should us mymin here to give graph a better look:
        min: 100.0,
        max: 4100.0,
        element: document.querySelector("#chart"),
        renderer: 'line',
        width: 1000, 
        height: 680, 
        series: [
          {color: '#E00',data: redrows},{color: '#0E0',data: greenrows},{color: '#00E',data: bluerows}
        ]
      })
      var xAxis = new Rickshaw.Graph.Axis.Time({
        graph: graph
      })
      var yAxis = new Rickshaw.Graph.Axis.Y({
        graph: graph,
        // tickFormat: Rickshaw.Fixtures.Number.formatKMBT
      })
      var previewSlider = new Rickshaw.Graph.RangeSlider.Preview({
        graph: graph,
        element: document.querySelector("#previewSlider")
      })
      
      var legend = new Rickshaw.Graph.Legend( {
        element: document.querySelector('#rickshaw_legend'),
        graph: graph
      })

      graph.render()
      xAxis.render()
      yAxis.render()
    })



